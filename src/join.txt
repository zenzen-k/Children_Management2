-- 교사별 인원 수 
select e_name, cnt from
(select e_no, count(u_name) as cnt from 
(select e.e_no, u_name from
(select e_no from emp group by e_no) e
left outer join
(select e_no, u_name from users where k_no=1) u
on e.e_no = u.e_no)
group by e_no order by e_no)
natural join emp;



-- 교실별 인원 수
select c_age, count(s_name) from 
(select c.c_age, s_name from
(select c_age from classroom where k_no=1 and c_age>0 group by c_age) c
left outer join
(select c_age, s_name from student where k_no=1) s
on c.c_age = s.c_age)
group by c_age order by c_age;



-- 전체 교사이름, 직급이름, 교실이름, 조건= 유치원
(select * from users where k_no=1);

select u_name, id, c_name, c_age, e_no from (select * from users where k_no=1) natural join classroom;

select u_name, id, c_name, c_age, e_name from
(select u_name, id, c_name, c_age, e_no from 
(select * from users where k_no=1) natural join classroom) u
natural join emp e;

select u_name, id, c_no, c_name, c_age, e_name, e_no from 
(select u_name, id, c_no, c_name, c_age, e_no from 
(select * from users where k_no = 1 and approval='Y') natural join classroom) 
natural join emp e order by e_no;



-- 일자별 전체 학생 츌석부(담임)
select s_no, s_name from student where c_no='2';

select * from ATTENDMANAGE where adate='2023-04-12';

select s.s_no, s_name, attend, absence, earlier, adate from
(select s_no, s_name from student where c_no=2 and k_no=1) s
left outer join (select * from ATTENDMANAGE where adate='2023-04-12') a
on a.s_no = s.s_no;


-- 일자별 전체 학생 츌석부(원장)
select s.s_no, s_name, attend, absence, earlier, adate from
(select s_no, s_name from student where k_no=1) s
left outer join (select * from ATTENDMANAGE where adate='2023-04-12') a
on a.s_no = s.s_no;


-- 평가 조회하기(일단 보류)
--전체
select s.s_no, s_name, d_no, s.c_age, semester, writer, writerid, approve 
from developmental d right outer join STUDENT s 
on d.s_no = s.s_no;
--반별
select s.s_no, s_name, d_no, s.c_age, semester, writer, writerid, approve 
from developmental d right outer join 
(select * from STUDENT where c_no=2) s
on d.s_no = s.s_no;


-- 학생별 평가 내용
select s_no, sd.d_no, c_age, semester, writer, writerid, approve, scope, d_content from
(select * from DEVELOPMENTAL where s_no = '230003') sd
left outer join DEVCONTENT dc
on sd.d_no = dc.d_no
order by c_age, semester;


-- 승인
select s_no, s_name, d_no, c_age, semester, writer, writerid, c_name, approve
from
(select s_no, d_no, c_age, semester, writer, writerid, c_name, approve
from
(select s_no, d_no, c_age, semester, writer, writerid, c_no, approve
from
(select * from developmental where approve='승인대기') d
inner join
(select * from users where k_no=1) s
on s.id = d.writerid)
natural join
(select * from classroom where k_no=1))
natural join student;